#include <iomanip>

#include <iostream>

using namespace std;

double sumN(double, int, double&);
double sumE(double, double, int&);

int main() {
    setlocale(LC_ALL, "");
    cout << "Вычисление значений функции sin(x)/x\n\n";
    double x; // Значение аргумента
    double func; // Точное значение функции
    double sum; // Значение частичной суммы
    int n; // Число слагаемых в частичной сумме
    char com = 'y';
    while (com != 'n') {
        cout << "Задание 1" << endl;
        cout << "Введите значение аргумента > ";
        cin >> x;
        cout << "Задайте число слагаемых > ";
        cin >> n;
        func = sin(x) / x; // Вычисление "точного" значения
        double last;
        sum = sumN(x, n, last);
        cout << "Точное значение функции равно " << func << endl;
        cout << "Частичная сумма ряда равна " << sum << endl;
        cout << "Абсолютная погрешность равна " << fabs(func - sum) << endl;
        cout << "Последнее слагаемое равно " << last << endl;

        cout << "\nЗадание 2" << endl;
        double E;
        cout << "Введите значение аргумента > ";
        cin >> x;
        cout << "Задайте точность вычислений > ";
        cin >> E;
        func = sin(x) / x; //Вычисление "точного" значения
        sum = sumE(x, E, n);
        cout << "Точное значение функции равно " << func << endl;
        cout << "Частичная сумма ряда c заданной точностью равна " << sum << endl;
        cout << "Учтено " << n << " членов ряда" << endl;
        sum = sumE(x, E / 10, n);
        cout << "Частичная сумма ряда c точностью, большей в 10 раз, равна " << sum << endl;
        cout << "Учтено " << n << " членов ряда" << endl;
        cout << "\nПродолжить? (y/n) ";
        cin >> com;
    }

}

int fact(int N) //функция факториал без подключения библиотек
{
    if (N < 0) // если пользователь ввел отрицательное число
        return 0; // возвращаем ноль
    if (N == 0) // если пользователь ввел ноль,
        return 1; // возвращаем факториал от нуля
    else // Во всех остальных случаях
        return N * fact(N - 1); // делаем рекурсию.
}

double sumN(double x, int n, double& last) //первое задание
{
    double sum = 0; //инициализация sum
    double r = 0; //инициализация r
    for (int i = 1; i <= n; i++) //вычисление суммы значений ряда
    {
        r = (pow(-1, i - 1)) * ((pow(x, 2 * i - 2)) / fact(2 * i - 1)); //общий вид функции sin(x)/x
        sum += r;
    }
    r = (pow(-1, n - 1)) * ((pow(x, 2 * n - 2)) / fact(2 * n - 1)); //поиск последнего слагаемого в ряде
    last = r; //"вывод" последнего слагаемого в ряде
    return sum; //возврат результата частичной суммы ряда
}

double sumE(double x, double E, int& n) //второе задание (работает верно с положительными числами, с отрицательными не всегда получается)
{
    double last = 1; //инициализируем переменную last со значением 1, тк макс значение синуса = 1
    double sum = 0; //обнуляем сумму
    for (n = 1; fabs(last) > E; n++) {
        if (n > 14) { //цикл нужен для того, чтобы число не уходило в бесконечность
            cout << "\nВозможно, следующее число нельзя вычислить. Ответ ниже может быть неверным. \n\n";
            break;
        }
        else {
            double r;
            r = (pow(-1, n - 1)) * ((pow(x, 2 * n - 2)) / fact(2 * n - 1));
            last = r; //присваивание переменной last r, для того, чтобы потом в цикле сравнить с E
            sum += last; //частичная сумма ряда
        }
    }
    return sum;
}